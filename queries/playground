# fulltext search
# + signifies AND operation
# | signifies OR operation
# - negates a single token
# " wraps a number of tokens to signify a phrase for searching
# * at the end of a term signifies a prefix query
# ( and ) signify precedence
# ~N after a word signifies edit distance (fuzziness)
# ~N after a phrase signifies slop amount
GET catalog_en/product/_search
{
  "query": {
    "simple_query_string" : {
        "query": "-OM163A",
        "analyzer": "snowball",
        "fields": ["code","title", "brand", "description"],
        "default_operator": "and"
    }
  }

  , "_source": ["title", "brand"]
}

# search as you type
# this solution is not optimal - check Suggesters to be used instead
# https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters-completion.html
GET catalog_en/product/_search
{
  "query": {
    "match_phrase_prefix": {
        "title" : {
          "query" : "prop",
          "max_expansions" : 10
        }
     }
  }

  , "_source": ["title", "brand"]
}

# faceted search
GET catalog_en/product/_search
{
  "query": {
    "match_all": {
     }
  }

  , "_source": ["title", "brand"]
}



########### PLAYGROUND ###########


GET catalog/product/_search
{
  "query": {},
  "from": 0,
  "size": 20,
  "_source": ["title","brand"]
}

GET catalog/product/_search
{
  "query": {


    "nested" :
      {
      "path" : "price",
      "query" : {
        "bool" : {
          "must" : [
            { "match" : {"price.pricelist" : "RRP-EUR"} },
            { "range" : {"price.final_price" : {"gt" : 50, "lt": 200}} }
          ]
        }
      }
    }

  }
}

GET catalog/product/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": { "title": "Prophet*" }

        }
      ],
      "filter": {

       "range": {
         "FIELD": {
           "gte": 10,
           "lte": 20
         }
       }
      }
    }
  },

  "from": 0, "size": 20
}